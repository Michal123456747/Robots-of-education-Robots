; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


;settings:
[enviroment]
version = '"alpha"'
lib_deps =
        bblanchon/ArduinoJson @ ^6.18.5
        arkhipenko/Dictionary @ ^3.4.0
build_flags =
        -DVERSION=${enviroment.version}



;settings for specific board
[nanoNewSet]
build_flags =
        -DJSON_BUFFER_SIZE=1024



[unoR3Set]
build_flags =
        -DJSON_BUFFER_SIZE=1024



;settings for specific mode
[test_enviroment]
test_lib_deps =
        https://github.com/eranpeer/FakeIt.git
lib_deps =
        ${enviroment.lib_deps}
        ${test_enviroment.test_lib_deps}
native_build_flags =
        -DTEST
        ${enviroment.build_flags}
common_build_flags =
        -DARDUINO
        ${test_enviroment.native_build_flags}



[debug_enviroment]
debug_lib_deps =
        featherfly/SoftwareSerial @ ^1.0
lib_deps =
        ${enviroment.lib_deps}
        ${debug_enviroment.debug_lib_deps}
debug_build_flags =
        -DDEBUG
        ${enviroment.build_flags}



[platformio]
default_envs =
        nanoNew
        unoR3



;Arduino nano V3.0
[env:nanoNew]
platform = atmelavr
board = nanoatmega328new
framework = arduino
lib_deps = ${enviroment.lib_deps}
build_flags =
        ${enviroment.build_flags}
        ${nanoNewSet.build_flags}



[env:test_nanoNew]
platform = atmelavr
board = nanoatmega328new
framework = arduino
lib_deps = ${test_enviroment.lib_deps}
build_flags =
        ${test_enviroment.common_build_flags}
        ${nanoNewSet.build_flags}



[env:debug_nanoNew]
platform = atmelavr
board = nanoatmega328new
framework = arduino
lib_deps = ${debug_enviroment.lib_deps}
build_flags =
        ${debug_enviroment.debug_build_flags}
        ${nanoNewSet.build_flags}



;Arduino uno R3
[env:unoR3]
platform = atmelavr
board = uno
framework = arduino
lib_deps = ${enviroment.lib_deps}
build_flags =
        ${enviroment.build_flags}
        ${unoR3Set.build_flags}



[env:test_unoR3]
platform = atmelavr
board = uno
framework = arduino
lib_deps = ${test_enviroment.lib_deps}
build_flags =
        ${test_enviroment.common_build_flags}
        ${unoR3Set.build_flags}



[env:debug_unoR3]
platform = atmelavr
board = uno
framework = arduino
lib_deps = ${debug_enviroment.lib_deps}
build_flags =
        ${debug_enviroment.debug_build_flags}
        ${unoR3Set.build_flags}


;TODO: delete native
;native
[env:native]
platform = native
lib_deps = ${test_enviroment.lib_deps}
build_flags = ${test_enviroment.native_build_flags}
